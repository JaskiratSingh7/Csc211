public class Automobile {
    protected int modelYear;
    protected String brand;

    public Automobile(int modelYear, String brand) {
        this.modelYear = modelYear;
        this.brand = brand;
    }

    public void honk() {
        System.out.println(brand + " goes Honk Honk!");
    }

    public void accelerate() {
        System.out.println(brand + " is accelerating!");
    }

    public void stop() {
        System.out.println(brand + " has stopped.");
    }

    public void reverse() {
        System.out.println(brand + " is reversing.");
    }

    public int compareTo(Automobile other) {
        return Integer.compare(this.modelYear, other.modelYear);
    }

    public boolean equals(Object obj) {
        if (!(obj instanceof Automobile)) return false;
        Automobile that = (Automobile) obj;
        return this.modelYear == that.modelYear && this.brand.equals(that.brand);
    }

    @Override
    public String toString() {
        return brand + " (" + modelYear + ")";
    }
}

// Subclass Car
public class Car extends Automobile {
    public Car(int modelYear, String brand) {
        super(modelYear, brand);
    }
}

// Subclass SportsCar
public class SportsCar extends Automobile {
    public SportsCar(int modelYear, String brand) {
        super(modelYear, brand);
    }

    @Override
    public void accelerate() {
        System.out.println(brand + " is accelerating rapidly!");
    }
}

// Subclass JunkCar
public class JunkCar extends Automobile {
    public JunkCar(int modelYear, String brand) {
        super(modelYear, brand);
    }

    @Override
    public void accelerate() {
        System.out.println(brand + " struggles to accelerate...");
    }

    @Override
    public void stop() {
        System.out.println(brand + " stops with a screech.");
    }
}

// Tester Class
public class Tester {
    public static void main(String[] args) {
        Automobile[] vehicles = {
            new Car(2020, "Toyota"),
            new SportsCar(2022, "Ferrari"),
            new JunkCar(1995, "Old Chevy"),
            new Car(2018, "Honda"),
            new SportsCar(2023, "Lamborghini")
        };

        for (Automobile vehicle : vehicles) {
            System.out.println(vehicle);
            vehicle.honk();
            vehicle.accelerate();
            vehicle.reverse();
            vehicle.stop();
            System.out.println();
        }

        System.out.println("Comparing Toyota and Honda: " + vehicles[0].compareTo(vehicles[3]));
        System.out.println("Comparing Ferrari and Lamborghini: " + vehicles[1].compareTo(vehicles[4]));
        System.out.println("Checking if two cars are equal: " + vehicles[0].equals(new Car(2020, "Toyota")));
    }
}
